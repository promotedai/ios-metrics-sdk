// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/promotion/promotion.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "proto/promotion/Promotion.pbobjc.h"
#import "proto/common/Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(PROAccount);
GPBObjCClassDeclaration(PROContent);
GPBObjCClassDeclaration(PROEntityPath);
GPBObjCClassDeclaration(PROFlatPromotion);
GPBObjCClassDeclaration(PROPromotion);

#pragma mark - PROPromotionRoot

@implementation PROPromotionRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PROPromotionRoot_FileDescriptor

static GPBFileDescriptor *PROPromotionRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"promotion"
                                                 objcPrefix:@"PRO"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum PROStatus

GPBEnumDescriptor *PROStatus_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "UnknownStatus\000Active\000Paused\000Archived\000";
    static const int32_t values[] = {
        PROStatus_UnknownStatus,
        PROStatus_Active,
        PROStatus_Paused,
        PROStatus_Archived,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PROStatus)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PROStatus_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PROStatus_IsValidValue(int32_t value__) {
  switch (value__) {
    case PROStatus_UnknownStatus:
    case PROStatus_Active:
    case PROStatus_Paused:
    case PROStatus_Archived:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PROBidType

GPBEnumDescriptor *PROBidType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "UnknownBidType\000Cpm\000Cpc\000";
    static const int32_t values[] = {
        PROBidType_UnknownBidType,
        PROBidType_Cpm,
        PROBidType_Cpc,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PROBidType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PROBidType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PROBidType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PROBidType_UnknownBidType:
    case PROBidType_Cpm:
    case PROBidType_Cpc:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PROPlatform

@implementation PROPlatform


typedef struct PROPlatform__storage_ {
  uint32_t _has_storage_[1];
} PROPlatform__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROPlatform class]
                                     rootClass:[PROPromotionRoot class]
                                          file:PROPromotionRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PROPlatform__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROCustomer

@implementation PROCustomer


typedef struct PROCustomer__storage_ {
  uint32_t _has_storage_[1];
} PROCustomer__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROCustomer class]
                                     rootClass:[PROPromotionRoot class]
                                          file:PROPromotionRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PROCustomer__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROAccount

@implementation PROAccount

@dynamic currencyCode;

typedef struct PROAccount__storage_ {
  uint32_t _has_storage_[1];
  PROCurrencyCode currencyCode;
} PROAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "currencyCode",
        .dataTypeSpecific.enumDescFunc = PROCurrencyCode_EnumDescriptor,
        .number = PROAccount_FieldNumber_CurrencyCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROAccount__storage_, currencyCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROAccount class]
                                     rootClass:[PROPromotionRoot class]
                                          file:PROPromotionRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROAccount__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PROAccount_CurrencyCode_RawValue(PROAccount *message) {
  GPBDescriptor *descriptor = [PROAccount descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROAccount_FieldNumber_CurrencyCode];
  return GPBGetMessageRawEnumField(message, field);
}

void SetPROAccount_CurrencyCode_RawValue(PROAccount *message, int32_t value) {
  GPBDescriptor *descriptor = [PROAccount descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROAccount_FieldNumber_CurrencyCode];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - PROCampaign

@implementation PROCampaign


typedef struct PROCampaign__storage_ {
  uint32_t _has_storage_[1];
} PROCampaign__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROCampaign class]
                                     rootClass:[PROPromotionRoot class]
                                          file:PROPromotionRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(PROCampaign__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROContent

@implementation PROContent

@dynamic externalContentId;

typedef struct PROContent__storage_ {
  uint32_t _has_storage_[1];
  NSString *externalContentId;
} PROContent__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "externalContentId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROContent_FieldNumber_ExternalContentId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROContent__storage_, externalContentId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROContent class]
                                     rootClass:[PROPromotionRoot class]
                                          file:PROPromotionRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROContent__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROPromotion

@implementation PROPromotion

@dynamic hasContent, content;
@dynamic bidType;
@dynamic bidAmount;

typedef struct PROPromotion__storage_ {
  uint32_t _has_storage_[1];
  PROBidType bidType;
  PROContent *content;
  double bidAmount;
} PROPromotion__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "content",
        .dataTypeSpecific.clazz = GPBObjCClass(PROContent),
        .number = PROPromotion_FieldNumber_Content,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROPromotion__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "bidType",
        .dataTypeSpecific.enumDescFunc = PROBidType_EnumDescriptor,
        .number = PROPromotion_FieldNumber_BidType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROPromotion__storage_, bidType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "bidAmount",
        .dataTypeSpecific.clazz = Nil,
        .number = PROPromotion_FieldNumber_BidAmount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROPromotion__storage_, bidAmount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROPromotion class]
                                     rootClass:[PROPromotionRoot class]
                                          file:PROPromotionRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROPromotion__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PROPromotion_BidType_RawValue(PROPromotion *message) {
  GPBDescriptor *descriptor = [PROPromotion descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROPromotion_FieldNumber_BidType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetPROPromotion_BidType_RawValue(PROPromotion *message, int32_t value) {
  GPBDescriptor *descriptor = [PROPromotion descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROPromotion_FieldNumber_BidType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - PROFlatPromotion

@implementation PROFlatPromotion

@dynamic hasEntityPath, entityPath;
@dynamic hasAccount, account;
@dynamic hasPromotion, promotion;

typedef struct PROFlatPromotion__storage_ {
  uint32_t _has_storage_[1];
  PROEntityPath *entityPath;
  PROAccount *account;
  PROPromotion *promotion;
} PROFlatPromotion__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "entityPath",
        .dataTypeSpecific.clazz = GPBObjCClass(PROEntityPath),
        .number = PROFlatPromotion_FieldNumber_EntityPath,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROFlatPromotion__storage_, entityPath),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "account",
        .dataTypeSpecific.clazz = GPBObjCClass(PROAccount),
        .number = PROFlatPromotion_FieldNumber_Account,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROFlatPromotion__storage_, account),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "promotion",
        .dataTypeSpecific.clazz = GPBObjCClass(PROPromotion),
        .number = PROFlatPromotion_FieldNumber_Promotion,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROFlatPromotion__storage_, promotion),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROFlatPromotion class]
                                     rootClass:[PROPromotionRoot class]
                                          file:PROPromotionRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROFlatPromotion__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROInsertionLogFlatPromotion

@implementation PROInsertionLogFlatPromotion

@dynamic hasFlatPromotion, flatPromotion;

typedef struct PROInsertionLogFlatPromotion__storage_ {
  uint32_t _has_storage_[1];
  PROFlatPromotion *flatPromotion;
} PROInsertionLogFlatPromotion__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "flatPromotion",
        .dataTypeSpecific.clazz = GPBObjCClass(PROFlatPromotion),
        .number = PROInsertionLogFlatPromotion_FieldNumber_FlatPromotion,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROInsertionLogFlatPromotion__storage_, flatPromotion),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROInsertionLogFlatPromotion class]
                                     rootClass:[PROPromotionRoot class]
                                          file:PROPromotionRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROInsertionLogFlatPromotion__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
