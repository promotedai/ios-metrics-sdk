// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/event/event.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "proto/event/Event.pbobjc.h"
#import "proto/promotion/Promotion.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdirect-ivar-access"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(PROBrowser);
GPBObjCClassDeclaration(PROClientHintBrand);
GPBObjCClassDeclaration(PROClientHints);
GPBObjCClassDeclaration(PRODevice);
GPBObjCClassDeclaration(PROInsertionLogFlatPromotion);
GPBObjCClassDeclaration(PROLatestImpression);

#pragma mark - PROEventRoot

@implementation PROEventRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PROEventRoot_FileDescriptor

static GPBFileDescriptor *PROEventRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"event"
                                                 objcPrefix:@"PRO"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum PRODeviceType

GPBEnumDescriptor *PRODeviceType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "UnknownDeviceType\000Desktop\000Mobile\000Tablet\000";
    static const int32_t values[] = {
        PRODeviceType_UnknownDeviceType,
        PRODeviceType_Desktop,
        PRODeviceType_Mobile,
        PRODeviceType_Tablet,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PRODeviceType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PRODeviceType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PRODeviceType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PRODeviceType_UnknownDeviceType:
    case PRODeviceType_Desktop:
    case PRODeviceType_Mobile:
    case PRODeviceType_Tablet:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PROUseCase

GPBEnumDescriptor *PROUseCase_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "Unknown\000Custom\000Search\000SearchSuggestions\000"
        "Feed\000RelatedContent\000CloseUp\000CategoryCont"
        "ent\000MyContent\000MySavedContent\000SellerConte"
        "nt\000";
    static const int32_t values[] = {
        PROUseCase_Unknown,
        PROUseCase_Custom,
        PROUseCase_Search,
        PROUseCase_SearchSuggestions,
        PROUseCase_Feed,
        PROUseCase_RelatedContent,
        PROUseCase_CloseUp,
        PROUseCase_CategoryContent,
        PROUseCase_MyContent,
        PROUseCase_MySavedContent,
        PROUseCase_SellerContent,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PROUseCase)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PROUseCase_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PROUseCase_IsValidValue(int32_t value__) {
  switch (value__) {
    case PROUseCase_Unknown:
    case PROUseCase_Custom:
    case PROUseCase_Search:
    case PROUseCase_SearchSuggestions:
    case PROUseCase_Feed:
    case PROUseCase_RelatedContent:
    case PROUseCase_CloseUp:
    case PROUseCase_CategoryContent:
    case PROUseCase_MyContent:
    case PROUseCase_MySavedContent:
    case PROUseCase_SellerContent:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PROJoinedIdentifiers

@implementation PROJoinedIdentifiers

@dynamic platformId;
@dynamic userId;
@dynamic logUserId;
@dynamic sessionId;
@dynamic viewId;
@dynamic requestId;
@dynamic insertionId;
@dynamic impressionId;

typedef struct PROJoinedIdentifiers__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
  NSString *logUserId;
  NSString *sessionId;
  NSString *viewId;
  NSString *requestId;
  NSString *insertionId;
  NSString *impressionId;
  uint64_t platformId;
} PROJoinedIdentifiers__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROJoinedIdentifiers_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROJoinedIdentifiers__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROJoinedIdentifiers_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROJoinedIdentifiers__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "logUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROJoinedIdentifiers_FieldNumber_LogUserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROJoinedIdentifiers__storage_, logUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROJoinedIdentifiers_FieldNumber_SessionId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROJoinedIdentifiers__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "viewId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROJoinedIdentifiers_FieldNumber_ViewId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROJoinedIdentifiers__storage_, viewId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROJoinedIdentifiers_FieldNumber_RequestId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROJoinedIdentifiers__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "insertionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROJoinedIdentifiers_FieldNumber_InsertionId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROJoinedIdentifiers__storage_, insertionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "impressionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROJoinedIdentifiers_FieldNumber_ImpressionId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PROJoinedIdentifiers__storage_, impressionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROJoinedIdentifiers class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROJoinedIdentifiers__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROUser

@implementation PROUser

@dynamic platformId;
@dynamic userId;
@dynamic logUserId;
@dynamic clientLogTimestamp;
@dynamic eventApiTimestamp;

typedef struct PROUser__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
  NSString *logUserId;
  uint64_t platformId;
  uint64_t clientLogTimestamp;
  uint64_t eventApiTimestamp;
} PROUser__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROUser_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROUser__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROUser_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROUser__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "logUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROUser_FieldNumber_LogUserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROUser__storage_, logUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientLogTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROUser_FieldNumber_ClientLogTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROUser__storage_, clientLogTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eventApiTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROUser_FieldNumber_EventApiTimestamp,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROUser__storage_, eventApiTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROUser class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROUser__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PRODevice

@implementation PRODevice

@dynamic deviceType;
@dynamic brand;
@dynamic deviceName;
@dynamic display;
@dynamic model;
@dynamic resolutionWidth;
@dynamic resolutionHeight;

typedef struct PRODevice__storage_ {
  uint32_t _has_storage_[1];
  PRODeviceType deviceType;
  uint32_t resolutionWidth;
  uint32_t resolutionHeight;
  NSString *brand;
  NSString *deviceName;
  NSString *display;
  NSString *model;
} PRODevice__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "deviceType",
        .dataTypeSpecific.enumDescFunc = PRODeviceType_EnumDescriptor,
        .number = PRODevice_FieldNumber_DeviceType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PRODevice__storage_, deviceType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "brand",
        .dataTypeSpecific.clazz = Nil,
        .number = PRODevice_FieldNumber_Brand,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PRODevice__storage_, brand),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deviceName",
        .dataTypeSpecific.clazz = Nil,
        .number = PRODevice_FieldNumber_DeviceName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PRODevice__storage_, deviceName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "display",
        .dataTypeSpecific.clazz = Nil,
        .number = PRODevice_FieldNumber_Display,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PRODevice__storage_, display),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "model",
        .dataTypeSpecific.clazz = Nil,
        .number = PRODevice_FieldNumber_Model,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PRODevice__storage_, model),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "resolutionWidth",
        .dataTypeSpecific.clazz = Nil,
        .number = PRODevice_FieldNumber_ResolutionWidth,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PRODevice__storage_, resolutionWidth),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "resolutionHeight",
        .dataTypeSpecific.clazz = Nil,
        .number = PRODevice_FieldNumber_ResolutionHeight,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PRODevice__storage_, resolutionHeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PRODevice class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PRODevice__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PRODevice_DeviceType_RawValue(PRODevice *message) {
  GPBDescriptor *descriptor = [PRODevice descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PRODevice_FieldNumber_DeviceType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetPRODevice_DeviceType_RawValue(PRODevice *message, int32_t value) {
  GPBDescriptor *descriptor = [PRODevice descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PRODevice_FieldNumber_DeviceType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - PROClientHints

@implementation PROClientHints

@dynamic isMobile;
@dynamic brandArray, brandArray_Count;
@dynamic architecture;
@dynamic model;
@dynamic platform;
@dynamic platformVersion;
@dynamic uaFullVersion;

typedef struct PROClientHints__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *brandArray;
  NSString *architecture;
  NSString *model;
  NSString *platform;
  NSString *platformVersion;
  NSString *uaFullVersion;
} PROClientHints__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isMobile",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClientHints_FieldNumber_IsMobile,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "brandArray",
        .dataTypeSpecific.clazz = GPBObjCClass(PROClientHintBrand),
        .number = PROClientHints_FieldNumber_BrandArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PROClientHints__storage_, brandArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "architecture",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClientHints_FieldNumber_Architecture,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROClientHints__storage_, architecture),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "model",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClientHints_FieldNumber_Model,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROClientHints__storage_, model),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "platform",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClientHints_FieldNumber_Platform,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROClientHints__storage_, platform),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "platformVersion",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClientHints_FieldNumber_PlatformVersion,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROClientHints__storage_, platformVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "uaFullVersion",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClientHints_FieldNumber_UaFullVersion,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROClientHints__storage_, uaFullVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROClientHints class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROClientHints__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROClientHintBrand

@implementation PROClientHintBrand

@dynamic brand;
@dynamic version;

typedef struct PROClientHintBrand__storage_ {
  uint32_t _has_storage_[1];
  NSString *brand;
  NSString *version;
} PROClientHintBrand__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "brand",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClientHintBrand_FieldNumber_Brand,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROClientHintBrand__storage_, brand),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "version",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClientHintBrand_FieldNumber_Version,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROClientHintBrand__storage_, version),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROClientHintBrand class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROClientHintBrand__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROBrowser

@implementation PROBrowser

@dynamic userAgent;
@dynamic viewportWidth;
@dynamic viewportHeight;
@dynamic hasClientHints, clientHints;

typedef struct PROBrowser__storage_ {
  uint32_t _has_storage_[1];
  uint32_t viewportWidth;
  uint32_t viewportHeight;
  NSString *userAgent;
  PROClientHints *clientHints;
} PROBrowser__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userAgent",
        .dataTypeSpecific.clazz = Nil,
        .number = PROBrowser_FieldNumber_UserAgent,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROBrowser__storage_, userAgent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "viewportWidth",
        .dataTypeSpecific.clazz = Nil,
        .number = PROBrowser_FieldNumber_ViewportWidth,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROBrowser__storage_, viewportWidth),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "viewportHeight",
        .dataTypeSpecific.clazz = Nil,
        .number = PROBrowser_FieldNumber_ViewportHeight,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROBrowser__storage_, viewportHeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "clientHints",
        .dataTypeSpecific.clazz = GPBObjCClass(PROClientHints),
        .number = PROBrowser_FieldNumber_ClientHints,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROBrowser__storage_, clientHints),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROBrowser class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROBrowser__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROSessionProfile

@implementation PROSessionProfile

@dynamic ipAddressOneOfCase;
@dynamic platformId;
@dynamic userId;
@dynamic clientLogTimestamp;
@dynamic eventApiTimestamp;
@dynamic sessionId;
@dynamic ipAddressV4;
@dynamic ipAddressV6;
@dynamic latitude;
@dynamic longitude;

typedef struct PROSessionProfile__storage_ {
  uint32_t _has_storage_[2];
  uint32_t ipAddressV4;
  NSString *userId;
  NSString *sessionId;
  NSData *ipAddressV6;
  uint64_t platformId;
  uint64_t clientLogTimestamp;
  uint64_t eventApiTimestamp;
  double latitude;
  double longitude;
} PROSessionProfile__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientLogTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_ClientLogTimestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, clientLogTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eventApiTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_EventApiTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, eventApiTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_SessionId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ipAddressV4",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_IpAddressV4,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, ipAddressV4),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFixed32,
      },
      {
        .name = "ipAddressV6",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_IpAddressV6,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, ipAddressV6),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "latitude",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_Latitude,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, latitude),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "longitude",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSessionProfile_FieldNumber_Longitude,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROSessionProfile__storage_, longitude),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROSessionProfile class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROSessionProfile__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    static const char *oneofs[] = {
      "ipAddress",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void PROSessionProfile_ClearIpAddressOneOfCase(PROSessionProfile *message) {
  GPBDescriptor *descriptor = [PROSessionProfile descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBClearOneof(message, oneof);
}
#pragma mark - PROSession

@implementation PROSession

@dynamic platformId;
@dynamic logUserId;
@dynamic clientLogTimestamp;
@dynamic eventApiTimestamp;
@dynamic sessionId;
@dynamic startEpochMillis;
@dynamic exclusiveEndEpochMillis;

typedef struct PROSession__storage_ {
  uint32_t _has_storage_[1];
  NSString *logUserId;
  NSString *sessionId;
  uint64_t platformId;
  uint64_t clientLogTimestamp;
  uint64_t eventApiTimestamp;
  uint64_t startEpochMillis;
  uint64_t exclusiveEndEpochMillis;
} PROSession__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSession_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROSession__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "logUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSession_FieldNumber_LogUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROSession__storage_, logUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientLogTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSession_FieldNumber_ClientLogTimestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROSession__storage_, clientLogTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eventApiTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSession_FieldNumber_EventApiTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROSession__storage_, eventApiTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSession_FieldNumber_SessionId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROSession__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startEpochMillis",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSession_FieldNumber_StartEpochMillis,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROSession__storage_, startEpochMillis),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "exclusiveEndEpochMillis",
        .dataTypeSpecific.clazz = Nil,
        .number = PROSession_FieldNumber_ExclusiveEndEpochMillis,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROSession__storage_, exclusiveEndEpochMillis),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROSession class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROSession__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROView

@implementation PROView

@dynamic platformId;
@dynamic logUserId;
@dynamic clientLogTimestamp;
@dynamic eventApiTimestamp;
@dynamic viewId;
@dynamic sessionId;
@dynamic name;
@dynamic URL;
@dynamic useCase;
@dynamic searchQuery;
@dynamic platformType;
@dynamic referrer;
@dynamic hasDevice, device;
@dynamic hasBrowser, browser;
@dynamic documentWidth;
@dynamic documentHeight;

typedef struct PROView__storage_ {
  uint32_t _has_storage_[1];
  PROUseCase useCase;
  PROView_PlatformType platformType;
  uint32_t documentWidth;
  uint32_t documentHeight;
  NSString *logUserId;
  NSString *viewId;
  NSString *sessionId;
  NSString *name;
  NSString *URL;
  NSString *searchQuery;
  NSString *referrer;
  PRODevice *device;
  PROBrowser *browser;
  uint64_t platformId;
  uint64_t clientLogTimestamp;
  uint64_t eventApiTimestamp;
} PROView__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROView__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "logUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_LogUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROView__storage_, logUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientLogTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_ClientLogTimestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROView__storage_, clientLogTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eventApiTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_EventApiTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROView__storage_, eventApiTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "viewId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_ViewId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROView__storage_, viewId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_SessionId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROView__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_Name,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROView__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_URL,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PROView__storage_, URL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "useCase",
        .dataTypeSpecific.enumDescFunc = PROUseCase_EnumDescriptor,
        .number = PROView_FieldNumber_UseCase,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PROView__storage_, useCase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "searchQuery",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_SearchQuery,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PROView__storage_, searchQuery),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "platformType",
        .dataTypeSpecific.enumDescFunc = PROView_PlatformType_EnumDescriptor,
        .number = PROView_FieldNumber_PlatformType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PROView__storage_, platformType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "referrer",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_Referrer,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PROView__storage_, referrer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "device",
        .dataTypeSpecific.clazz = GPBObjCClass(PRODevice),
        .number = PROView_FieldNumber_Device,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PROView__storage_, device),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "browser",
        .dataTypeSpecific.clazz = GPBObjCClass(PROBrowser),
        .number = PROView_FieldNumber_Browser,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PROView__storage_, browser),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "documentWidth",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_DocumentWidth,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PROView__storage_, documentWidth),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "documentHeight",
        .dataTypeSpecific.clazz = Nil,
        .number = PROView_FieldNumber_DocumentHeight,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PROView__storage_, documentHeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROView class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROView__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\016!!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PROView_UseCase_RawValue(PROView *message) {
  GPBDescriptor *descriptor = [PROView descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROView_FieldNumber_UseCase];
  return GPBGetMessageRawEnumField(message, field);
}

void SetPROView_UseCase_RawValue(PROView *message, int32_t value) {
  GPBDescriptor *descriptor = [PROView descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROView_FieldNumber_UseCase];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t PROView_PlatformType_RawValue(PROView *message) {
  GPBDescriptor *descriptor = [PROView descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROView_FieldNumber_PlatformType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetPROView_PlatformType_RawValue(PROView *message, int32_t value) {
  GPBDescriptor *descriptor = [PROView descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROView_FieldNumber_PlatformType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - Enum PROView_PlatformType

GPBEnumDescriptor *PROView_PlatformType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "Unknown\000Web\000MobileOrTablet\000Desktop\000";
    static const int32_t values[] = {
        PROView_PlatformType_Unknown,
        PROView_PlatformType_Web,
        PROView_PlatformType_MobileOrTablet,
        PROView_PlatformType_Desktop,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PROView_PlatformType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PROView_PlatformType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PROView_PlatformType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PROView_PlatformType_Unknown:
    case PROView_PlatformType_Web:
    case PROView_PlatformType_MobileOrTablet:
    case PROView_PlatformType_Desktop:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PRORequest

@implementation PRORequest

@dynamic platformId;
@dynamic logUserId;
@dynamic clientLogTimestamp;
@dynamic eventApiTimestamp;
@dynamic requestId;
@dynamic viewId;
@dynamic sessionId;
@dynamic useCase;
@dynamic searchQuery;

typedef struct PRORequest__storage_ {
  uint32_t _has_storage_[1];
  PROUseCase useCase;
  NSString *logUserId;
  NSString *requestId;
  NSString *viewId;
  NSString *searchQuery;
  NSString *sessionId;
  uint64_t platformId;
  uint64_t clientLogTimestamp;
  uint64_t eventApiTimestamp;
} PRORequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PRORequest_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PRORequest__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "logUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = PRORequest_FieldNumber_LogUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PRORequest__storage_, logUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientLogTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PRORequest_FieldNumber_ClientLogTimestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PRORequest__storage_, clientLogTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eventApiTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PRORequest_FieldNumber_EventApiTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PRORequest__storage_, eventApiTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.clazz = Nil,
        .number = PRORequest_FieldNumber_RequestId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PRORequest__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "viewId",
        .dataTypeSpecific.clazz = Nil,
        .number = PRORequest_FieldNumber_ViewId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PRORequest__storage_, viewId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "useCase",
        .dataTypeSpecific.enumDescFunc = PROUseCase_EnumDescriptor,
        .number = PRORequest_FieldNumber_UseCase,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PRORequest__storage_, useCase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "searchQuery",
        .dataTypeSpecific.clazz = Nil,
        .number = PRORequest_FieldNumber_SearchQuery,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PRORequest__storage_, searchQuery),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PRORequest_FieldNumber_SessionId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PRORequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PRORequest class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PRORequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PRORequest_UseCase_RawValue(PRORequest *message) {
  GPBDescriptor *descriptor = [PRORequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PRORequest_FieldNumber_UseCase];
  return GPBGetMessageRawEnumField(message, field);
}

void SetPRORequest_UseCase_RawValue(PRORequest *message, int32_t value) {
  GPBDescriptor *descriptor = [PRORequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PRORequest_FieldNumber_UseCase];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - PROInsertion

@implementation PROInsertion

@dynamic platformId;
@dynamic logUserId;
@dynamic clientLogTimestamp;
@dynamic eventApiTimestamp;
@dynamic insertionId;
@dynamic requestId;
@dynamic sessionId;
@dynamic viewId;
@dynamic contentId;
@dynamic promotedaiContentId;
@dynamic position;
@dynamic hasInsertionLogFlatPromotion, insertionLogFlatPromotion;
@dynamic awsPersonalizeRecommendationId;

typedef struct PROInsertion__storage_ {
  uint32_t _has_storage_[1];
  NSString *logUserId;
  NSString *insertionId;
  NSString *requestId;
  NSString *contentId;
  NSString *sessionId;
  NSString *viewId;
  PROInsertionLogFlatPromotion *insertionLogFlatPromotion;
  NSString *awsPersonalizeRecommendationId;
  uint64_t platformId;
  uint64_t clientLogTimestamp;
  uint64_t eventApiTimestamp;
  uint64_t promotedaiContentId;
  uint64_t position;
} PROInsertion__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "logUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_LogUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, logUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientLogTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_ClientLogTimestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, clientLogTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eventApiTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_EventApiTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, eventApiTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "insertionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_InsertionId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, insertionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_RequestId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contentId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_ContentId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, contentId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "promotedaiContentId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_PromotedaiContentId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, promotedaiContentId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "position",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_Position,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, position),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_SessionId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "viewId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_ViewId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, viewId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "insertionLogFlatPromotion",
        .dataTypeSpecific.clazz = GPBObjCClass(PROInsertionLogFlatPromotion),
        .number = PROInsertion_FieldNumber_InsertionLogFlatPromotion,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, insertionLogFlatPromotion),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "awsPersonalizeRecommendationId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROInsertion_FieldNumber_AwsPersonalizeRecommendationId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PROInsertion__storage_, awsPersonalizeRecommendationId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROInsertion class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROInsertion__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROImpression

@implementation PROImpression

@dynamic platformId;
@dynamic logUserId;
@dynamic clientLogTimestamp;
@dynamic eventApiTimestamp;
@dynamic impressionId;
@dynamic insertionId;
@dynamic requestId;
@dynamic sessionId;
@dynamic viewId;

typedef struct PROImpression__storage_ {
  uint32_t _has_storage_[1];
  NSString *logUserId;
  NSString *impressionId;
  NSString *insertionId;
  NSString *requestId;
  NSString *sessionId;
  NSString *viewId;
  uint64_t platformId;
  uint64_t clientLogTimestamp;
  uint64_t eventApiTimestamp;
} PROImpression__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROImpression__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "logUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_LogUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROImpression__storage_, logUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientLogTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_ClientLogTimestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROImpression__storage_, clientLogTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eventApiTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_EventApiTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROImpression__storage_, eventApiTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "impressionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_ImpressionId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROImpression__storage_, impressionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "insertionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_InsertionId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROImpression__storage_, insertionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_RequestId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROImpression__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_SessionId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PROImpression__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "viewId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROImpression_FieldNumber_ViewId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PROImpression__storage_, viewId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROImpression class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROImpression__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROClick

@implementation PROClick

@dynamic platformId;
@dynamic logUserId;
@dynamic clientLogTimestamp;
@dynamic eventApiTimestamp;
@dynamic clickId;
@dynamic impressionId;
@dynamic insertionId;
@dynamic requestId;
@dynamic sessionId;
@dynamic viewId;
@dynamic name;
@dynamic targetURL;
@dynamic elementId;

typedef struct PROClick__storage_ {
  uint32_t _has_storage_[1];
  NSString *logUserId;
  NSString *clickId;
  NSString *impressionId;
  NSString *insertionId;
  NSString *requestId;
  NSString *sessionId;
  NSString *viewId;
  NSString *name;
  NSString *targetURL;
  NSString *elementId;
  uint64_t platformId;
  uint64_t clientLogTimestamp;
  uint64_t eventApiTimestamp;
} PROClick__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_PlatformId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROClick__storage_, platformId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "logUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_LogUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROClick__storage_, logUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientLogTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_ClientLogTimestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROClick__storage_, clientLogTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eventApiTimestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_EventApiTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PROClick__storage_, eventApiTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "clickId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_ClickId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PROClick__storage_, clickId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "impressionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_ImpressionId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PROClick__storage_, impressionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "insertionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_InsertionId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PROClick__storage_, insertionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_RequestId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PROClick__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_SessionId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PROClick__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "viewId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_ViewId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PROClick__storage_, viewId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_Name,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PROClick__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "targetURL",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_TargetURL,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PROClick__storage_, targetURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "elementId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROClick_FieldNumber_ElementId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PROClick__storage_, elementId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROClick class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROClick__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\025\006\241!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROLatestImpressions

@implementation PROLatestImpressions

@dynamic impressionArray, impressionArray_Count;

typedef struct PROLatestImpressions__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *impressionArray;
} PROLatestImpressions__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "impressionArray",
        .dataTypeSpecific.clazz = GPBObjCClass(PROLatestImpression),
        .number = PROLatestImpressions_FieldNumber_ImpressionArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PROLatestImpressions__storage_, impressionArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROLatestImpressions class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROLatestImpressions__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROLatestImpression

@implementation PROLatestImpression

@dynamic impressionId;
@dynamic contentId;
@dynamic timestamp;

typedef struct PROLatestImpression__storage_ {
  uint32_t _has_storage_[1];
  NSString *impressionId;
  NSString *contentId;
  uint64_t timestamp;
} PROLatestImpression__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "impressionId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROLatestImpression_FieldNumber_ImpressionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROLatestImpression__storage_, impressionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contentId",
        .dataTypeSpecific.clazz = Nil,
        .number = PROLatestImpression_FieldNumber_ContentId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROLatestImpression__storage_, contentId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.clazz = Nil,
        .number = PROLatestImpression_FieldNumber_Timestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROLatestImpression__storage_, timestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROLatestImpression class]
                                     rootClass:[PROEventRoot class]
                                          file:PROEventRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROLatestImpression__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
