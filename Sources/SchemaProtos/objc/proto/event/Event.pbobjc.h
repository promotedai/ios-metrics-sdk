// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/event/event.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PROBrowser;
@class PROClientHintBrand;
@class PROClientHints;
@class PRODevice;
@class PROInsertionLogFlatPromotion;
@class PROLatestImpression;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PRODeviceType

/** Next ID = 4. */
typedef GPB_ENUM(PRODeviceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PRODeviceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PRODeviceType_UnknownDeviceType = 0,
  PRODeviceType_Desktop = 1,
  PRODeviceType_Mobile = 2,
  PRODeviceType_Tablet = 3,
};

GPBEnumDescriptor *PRODeviceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PRODeviceType_IsValidValue(int32_t value);

#pragma mark - Enum PROUseCase

/** Next ID = 11. */
typedef GPB_ENUM(PROUseCase) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PROUseCase_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PROUseCase_Unknown = 0,

  /** Need to handle in wrapper proto. */
  PROUseCase_Custom = 1,
  PROUseCase_Search = 2,
  PROUseCase_SearchSuggestions = 3,
  PROUseCase_Feed = 4,
  PROUseCase_RelatedContent = 5,
  PROUseCase_CloseUp = 6,
  PROUseCase_CategoryContent = 7,
  PROUseCase_MyContent = 8,
  PROUseCase_MySavedContent = 9,
  PROUseCase_SellerContent = 10,
};

GPBEnumDescriptor *PROUseCase_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PROUseCase_IsValidValue(int32_t value);

#pragma mark - Enum PROView_PlatformType

/** Next ID = 4. */
typedef GPB_ENUM(PROView_PlatformType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PROView_PlatformType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PROView_PlatformType_Unknown = 0,
  PROView_PlatformType_Web = 1,
  PROView_PlatformType_MobileOrTablet = 2,
  PROView_PlatformType_Desktop = 3,
};

GPBEnumDescriptor *PROView_PlatformType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PROView_PlatformType_IsValidValue(int32_t value);

#pragma mark - PROEventRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface PROEventRoot : GPBRootObject
@end

#pragma mark - PROJoinedIdentifiers

typedef GPB_ENUM(PROJoinedIdentifiers_FieldNumber) {
  PROJoinedIdentifiers_FieldNumber_PlatformId = 1,
  PROJoinedIdentifiers_FieldNumber_UserId = 2,
  PROJoinedIdentifiers_FieldNumber_LogUserId = 3,
  PROJoinedIdentifiers_FieldNumber_SessionId = 4,
  PROJoinedIdentifiers_FieldNumber_ViewId = 5,
  PROJoinedIdentifiers_FieldNumber_RequestId = 6,
  PROJoinedIdentifiers_FieldNumber_InsertionId = 7,
  PROJoinedIdentifiers_FieldNumber_ImpressionId = 8,
};

/**
 * This structure is used to help deduplicate identifiers that live in many
 * event types.
 * Next ID = 9.
 **/
GPB_FINAL @interface PROJoinedIdentifiers : GPBMessage

@property(nonatomic, readwrite) uint64_t platformId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *logUserId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *viewId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *insertionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *impressionId;

@end

#pragma mark - PROUser

typedef GPB_ENUM(PROUser_FieldNumber) {
  PROUser_FieldNumber_PlatformId = 1,
  PROUser_FieldNumber_UserId = 2,
  PROUser_FieldNumber_LogUserId = 3,
  PROUser_FieldNumber_ClientLogTimestamp = 4,
  PROUser_FieldNumber_EventApiTimestamp = 5,
};

/**
 * Used to store user properties.  E.g. purchasedContentIds.
 * Clients can update each User multiple times by logging the User with the same
 * user_id.  Unset fields will not be updated. Repeated fields will act like a
 * merge if the item has a key.  Otherwise, it'll act like an append.
 * Next ID = 6.
 **/
GPB_FINAL @interface PROUser : GPBMessage

/** Optional.  Default derived from API Key or BatchLogRequest. */
@property(nonatomic, readwrite) uint64_t platformId;

/** Required.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** Optional.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *logUserId;

/**
 * TODO - optional?
 * Required.  Client timestamp when event was created.
 **/
@property(nonatomic, readwrite) uint64_t clientLogTimestamp;

/** Clients should not set this.  This gets set in the Event API. */
@property(nonatomic, readwrite) uint64_t eventApiTimestamp;

@end

#pragma mark - PRODevice

typedef GPB_ENUM(PRODevice_FieldNumber) {
  PRODevice_FieldNumber_DeviceType = 1,
  PRODevice_FieldNumber_Brand = 3,
  PRODevice_FieldNumber_DeviceName = 5,
  PRODevice_FieldNumber_Display = 7,
  PRODevice_FieldNumber_Model = 9,
  PRODevice_FieldNumber_ResolutionWidth = 10,
  PRODevice_FieldNumber_ResolutionHeight = 11,
};

/**
 * A sub-message containing Device info.
 * Next ID = 12.
 **/
GPB_FINAL @interface PRODevice : GPBMessage

@property(nonatomic, readwrite) PRODeviceType deviceType;

/** android.os.Build.BRAND */
@property(nonatomic, readwrite, copy, null_resettable) NSString *brand;

/** android.os.Build.DEVICE */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;

/** android.os.Build.DISPLAY */
@property(nonatomic, readwrite, copy, null_resettable) NSString *display;

/** android.os.Build.MODEL */
@property(nonatomic, readwrite, copy, null_resettable) NSString *model;

@property(nonatomic, readwrite) uint32_t resolutionWidth;

@property(nonatomic, readwrite) uint32_t resolutionHeight;

@end

/**
 * Fetches the raw value of a @c PRODevice's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PRODevice_DeviceType_RawValue(PRODevice *message);
/**
 * Sets the raw value of an @c PRODevice's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPRODevice_DeviceType_RawValue(PRODevice *message, int32_t value);

#pragma mark - PROClientHints

typedef GPB_ENUM(PROClientHints_FieldNumber) {
  PROClientHints_FieldNumber_IsMobile = 1,
  PROClientHints_FieldNumber_BrandArray = 2,
  PROClientHints_FieldNumber_Architecture = 3,
  PROClientHints_FieldNumber_Model = 4,
  PROClientHints_FieldNumber_Platform = 5,
  PROClientHints_FieldNumber_PlatformVersion = 6,
  PROClientHints_FieldNumber_UaFullVersion = 7,
};

/**
 * https://raw.githubusercontent.com/snowplow/iglu-central/master/schemas/org.ietf/http_client_hints/jsonschema/1-0-0
 * A newer alternative to user agent strings.
 **/
GPB_FINAL @interface PROClientHints : GPBMessage

@property(nonatomic, readwrite) BOOL isMobile;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PROClientHintBrand*> *brandArray;
/** The number of items in @c brandArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger brandArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *architecture;

@property(nonatomic, readwrite, copy, null_resettable) NSString *model;

@property(nonatomic, readwrite, copy, null_resettable) NSString *platform;

@property(nonatomic, readwrite, copy, null_resettable) NSString *platformVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uaFullVersion;

@end

#pragma mark - PROClientHintBrand

typedef GPB_ENUM(PROClientHintBrand_FieldNumber) {
  PROClientHintBrand_FieldNumber_Brand = 1,
  PROClientHintBrand_FieldNumber_Version = 2,
};

/**
 * https://raw.githubusercontent.com/snowplow/iglu-central/master/schemas/org.ietf/http_client_hints/jsonschema/1-0-0
 * a part of ClientHints.
 **/
GPB_FINAL @interface PROClientHintBrand : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *brand;

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

@end

#pragma mark - PROBrowser

typedef GPB_ENUM(PROBrowser_FieldNumber) {
  PROBrowser_FieldNumber_UserAgent = 1,
  PROBrowser_FieldNumber_ViewportWidth = 2,
  PROBrowser_FieldNumber_ViewportHeight = 3,
  PROBrowser_FieldNumber_ClientHints = 4,
};

/**
 * A sub-message containing Browser info.
 * Next ID = 4.
 **/
GPB_FINAL @interface PROBrowser : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userAgent;

@property(nonatomic, readwrite) uint32_t viewportWidth;

@property(nonatomic, readwrite) uint32_t viewportHeight;

@property(nonatomic, readwrite, strong, null_resettable) PROClientHints *clientHints;
/** Test to see if @c clientHints has been set. */
@property(nonatomic, readwrite) BOOL hasClientHints;

@end

#pragma mark - PROSessionProfile

typedef GPB_ENUM(PROSessionProfile_FieldNumber) {
  PROSessionProfile_FieldNumber_PlatformId = 1,
  PROSessionProfile_FieldNumber_UserId = 2,
  PROSessionProfile_FieldNumber_ClientLogTimestamp = 4,
  PROSessionProfile_FieldNumber_EventApiTimestamp = 5,
  PROSessionProfile_FieldNumber_SessionId = 11,
  PROSessionProfile_FieldNumber_IpAddressV4 = 15,
  PROSessionProfile_FieldNumber_IpAddressV6 = 16,
  PROSessionProfile_FieldNumber_Latitude = 17,
  PROSessionProfile_FieldNumber_Longitude = 18,
};

typedef GPB_ENUM(PROSessionProfile_IpAddress_OneOfCase) {
  PROSessionProfile_IpAddress_OneOfCase_GPBUnsetOneOfCase = 0,
  PROSessionProfile_IpAddress_OneOfCase_IpAddressV4 = 15,
  PROSessionProfile_IpAddress_OneOfCase_IpAddressV6 = 16,
};

/**
 * Profile (contains pii) version of Session.
 * Next ID = 14.
 **/
GPB_FINAL @interface PROSessionProfile : GPBMessage

/** Optional.  Default derived from API Key or BatchLogRequest. */
@property(nonatomic, readwrite) uint64_t platformId;

/** Required.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/**
 * Required.  Can be optional if set on a wrapping BatchLogRequest.
 * Client timestamp when event was created.
 **/
@property(nonatomic, readwrite) uint64_t clientLogTimestamp;

/** Clients should not set this.  This gets set in the Event API. */
@property(nonatomic, readwrite) uint64_t eventApiTimestamp;

/** Required. This is the primary ID. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/**
 * Geo.
 * Optional.  We'll use IP Address to guess the user's location.
 **/
@property(nonatomic, readonly) PROSessionProfile_IpAddress_OneOfCase ipAddressOneOfCase;

@property(nonatomic, readwrite) uint32_t ipAddressV4;

@property(nonatomic, readwrite, copy, null_resettable) NSData *ipAddressV6;

/** [-90, 90] */
@property(nonatomic, readwrite) double latitude;

/** [-180, 180] */
@property(nonatomic, readwrite) double longitude;

@end

/**
 * Clears whatever value was set for the oneof 'ipAddress'.
 **/
void PROSessionProfile_ClearIpAddressOneOfCase(PROSessionProfile *message);

#pragma mark - PROSession

typedef GPB_ENUM(PROSession_FieldNumber) {
  PROSession_FieldNumber_PlatformId = 1,
  PROSession_FieldNumber_LogUserId = 3,
  PROSession_FieldNumber_ClientLogTimestamp = 4,
  PROSession_FieldNumber_EventApiTimestamp = 5,
  PROSession_FieldNumber_SessionId = 11,
  PROSession_FieldNumber_StartEpochMillis = 13,
  PROSession_FieldNumber_ExclusiveEndEpochMillis = 14,
};

/**
 * A period of activity by a single User.  Users can have multiple Sessions.
 * Clients can update a Session multiple times by logging multiple Sessions with
 * the same session_id.  Unset fields will not be updated.  Repeated fields will
 * act like a merge if the item has a key.  Otherwise, it'll act like an append.
 * Next ID = 22.
 **/
GPB_FINAL @interface PROSession : GPBMessage

/** Optional.  Default derived from API Key or BatchLogRequest. */
@property(nonatomic, readwrite) uint64_t platformId;

/** Required.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *logUserId;

/**
 * Required.  Can be optional if set on a wrapping BatchLogRequest.
 * Client timestamp when event was created.
 **/
@property(nonatomic, readwrite) uint64_t clientLogTimestamp;

/** Clients should not set this.  This gets set in the Event API. */
@property(nonatomic, readwrite) uint64_t eventApiTimestamp;

/** Required. This is the primary ID. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** Optional. Start time. If not set, we'll infer this from the API calls. */
@property(nonatomic, readwrite) uint64_t startEpochMillis;

/** Optional. End time. If not set, we'll infer this from the API calls. */
@property(nonatomic, readwrite) uint64_t exclusiveEndEpochMillis;

@end

#pragma mark - PROView

typedef GPB_ENUM(PROView_FieldNumber) {
  PROView_FieldNumber_PlatformId = 1,
  PROView_FieldNumber_LogUserId = 3,
  PROView_FieldNumber_ClientLogTimestamp = 4,
  PROView_FieldNumber_EventApiTimestamp = 5,
  PROView_FieldNumber_ViewId = 11,
  PROView_FieldNumber_SessionId = 12,
  PROView_FieldNumber_Name = 13,
  PROView_FieldNumber_URL = 14,
  PROView_FieldNumber_UseCase = 15,
  PROView_FieldNumber_SearchQuery = 16,
  PROView_FieldNumber_PlatformType = 30,
  PROView_FieldNumber_Referrer = 32,
  PROView_FieldNumber_Device = 33,
  PROView_FieldNumber_Browser = 34,
  PROView_FieldNumber_DocumentWidth = 35,
  PROView_FieldNumber_DocumentHeight = 36,
};

/**
 * A view of a single page (e.g. feed, search results, etc).
 * Next ID = 37.
 **/
GPB_FINAL @interface PROView : GPBMessage

/** Optional.  Default derived from API Key or BatchLogRequest. */
@property(nonatomic, readwrite) uint64_t platformId;

/** Required.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *logUserId;

/**
 * Required.  Can be optional if set on a wrapping BatchLogRequest.
 * Client timestamp when event was created.
 **/
@property(nonatomic, readwrite) uint64_t clientLogTimestamp;

/** Clients should not set this.  This gets set in the Event API. */
@property(nonatomic, readwrite) uint64_t eventApiTimestamp;

/** Required.  This is a UUID that is generated by the client. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *viewId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** Optional.  The name of the view. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * Optional.  This is the url for the page.
 * Q - how should this work with experiments?  Should we handle experiments separately?
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** Optional. */
@property(nonatomic, readwrite) PROUseCase useCase;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *searchQuery;

@property(nonatomic, readwrite) PROView_PlatformType platformType;

/** Optional.  Can be a full referrer string.  Could be just the UTM. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *referrer;

/** Optional. */
@property(nonatomic, readwrite, strong, null_resettable) PRODevice *device;
/** Test to see if @c device has been set. */
@property(nonatomic, readwrite) BOOL hasDevice;

/** Optional. */
@property(nonatomic, readwrite, strong, null_resettable) PROBrowser *browser;
/** Test to see if @c browser has been set. */
@property(nonatomic, readwrite) BOOL hasBrowser;

@property(nonatomic, readwrite) uint32_t documentWidth;

@property(nonatomic, readwrite) uint32_t documentHeight;

@end

/**
 * Fetches the raw value of a @c PROView's @c useCase property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PROView_UseCase_RawValue(PROView *message);
/**
 * Sets the raw value of an @c PROView's @c useCase property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPROView_UseCase_RawValue(PROView *message, int32_t value);

/**
 * Fetches the raw value of a @c PROView's @c platformType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PROView_PlatformType_RawValue(PROView *message);
/**
 * Sets the raw value of an @c PROView's @c platformType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPROView_PlatformType_RawValue(PROView *message, int32_t value);

#pragma mark - PRORequest

typedef GPB_ENUM(PRORequest_FieldNumber) {
  PRORequest_FieldNumber_PlatformId = 1,
  PRORequest_FieldNumber_LogUserId = 3,
  PRORequest_FieldNumber_ClientLogTimestamp = 4,
  PRORequest_FieldNumber_EventApiTimestamp = 5,
  PRORequest_FieldNumber_RequestId = 11,
  PRORequest_FieldNumber_ViewId = 12,
  PRORequest_FieldNumber_UseCase = 13,
  PRORequest_FieldNumber_SearchQuery = 14,
  PRORequest_FieldNumber_SessionId = 15,
};

/**
 * A request for Insertions. A View can issue multiple Requests.
 * Next ID = 16.
 **/
GPB_FINAL @interface PRORequest : GPBMessage

/** Optional.  Default derived from API Key or BatchLogRequest. */
@property(nonatomic, readwrite) uint64_t platformId;

/** Required.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *logUserId;

/**
 * Required.  Can be optional if set on a wrapping BatchLogRequest.
 * Client timestamp when event was created.
 **/
@property(nonatomic, readwrite) uint64_t clientLogTimestamp;

/** Clients should not set this.  This gets set in the Event API. */
@property(nonatomic, readwrite) uint64_t eventApiTimestamp;

/** Required.  This is a UUID that is generated by the client. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

/** Required. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *viewId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** Optional. */
@property(nonatomic, readwrite) PROUseCase useCase;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *searchQuery;

@end

/**
 * Fetches the raw value of a @c PRORequest's @c useCase property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PRORequest_UseCase_RawValue(PRORequest *message);
/**
 * Sets the raw value of an @c PRORequest's @c useCase property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPRORequest_UseCase_RawValue(PRORequest *message, int32_t value);

#pragma mark - PROInsertion

typedef GPB_ENUM(PROInsertion_FieldNumber) {
  PROInsertion_FieldNumber_PlatformId = 1,
  PROInsertion_FieldNumber_LogUserId = 3,
  PROInsertion_FieldNumber_ClientLogTimestamp = 4,
  PROInsertion_FieldNumber_EventApiTimestamp = 5,
  PROInsertion_FieldNumber_InsertionId = 11,
  PROInsertion_FieldNumber_RequestId = 12,
  PROInsertion_FieldNumber_ContentId = 13,
  PROInsertion_FieldNumber_PromotedaiContentId = 14,
  PROInsertion_FieldNumber_Position = 15,
  PROInsertion_FieldNumber_SessionId = 16,
  PROInsertion_FieldNumber_ViewId = 17,
  PROInsertion_FieldNumber_InsertionLogFlatPromotion = 30,
  PROInsertion_FieldNumber_AwsPersonalizeRecommendationId = 31,
};

/**
 * This Event represents a Content being served at a certain position regardless
 * of it was views by a user. Insertions are immutable.
 * Next ID = 32.
 **/
GPB_FINAL @interface PROInsertion : GPBMessage

/** Optional.  Default derived from API Key or BatchLogRequest. */
@property(nonatomic, readwrite) uint64_t platformId;

/** Required.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *logUserId;

/**
 * Required.  Can be optional if set on a wrapping BatchLogRequest.
 * Client timestamp when event was created.
 **/
@property(nonatomic, readwrite) uint64_t clientLogTimestamp;

/** Clients should not set this.  This gets set in the Event API. */
@property(nonatomic, readwrite) uint64_t eventApiTimestamp;

/** Required.  This is a UUID that is generated by the client. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *insertionId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *viewId;

/** Optional.  We'll look this up using the external_content_id. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *contentId;

/** Optional.  If using Promotion's CMS. */
@property(nonatomic, readwrite) uint64_t promotedaiContentId;

/** Optional.  0-based. */
@property(nonatomic, readwrite) uint64_t position;

/** Internal. */
@property(nonatomic, readwrite, strong, null_resettable) PROInsertionLogFlatPromotion *insertionLogFlatPromotion;
/** Test to see if @c insertionLogFlatPromotion has been set. */
@property(nonatomic, readwrite) BOOL hasInsertionLogFlatPromotion;

/** If we use AWS Personalize. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *awsPersonalizeRecommendationId;

@end

#pragma mark - PROImpression

typedef GPB_ENUM(PROImpression_FieldNumber) {
  PROImpression_FieldNumber_PlatformId = 1,
  PROImpression_FieldNumber_LogUserId = 3,
  PROImpression_FieldNumber_ClientLogTimestamp = 4,
  PROImpression_FieldNumber_EventApiTimestamp = 5,
  PROImpression_FieldNumber_ImpressionId = 11,
  PROImpression_FieldNumber_InsertionId = 12,
  PROImpression_FieldNumber_RequestId = 13,
  PROImpression_FieldNumber_SessionId = 14,
  PROImpression_FieldNumber_ViewId = 15,
};

/**
 * When an Insertion is shown to a user.
 * Impressions are immutable.
 * Next ID = 16.
 **/
GPB_FINAL @interface PROImpression : GPBMessage

/** Optional.  Default derived from API Key or BatchLogRequest. */
@property(nonatomic, readwrite) uint64_t platformId;

/** Required.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *logUserId;

/**
 * Required.  Can be optional if set on a wrapping BatchLogRequest.
 * Client timestamp when event was created.
 **/
@property(nonatomic, readwrite) uint64_t clientLogTimestamp;

/** Clients should not set this.  This gets set in the Event API. */
@property(nonatomic, readwrite) uint64_t eventApiTimestamp;

/** Required.  This is a UUID that is generated by the client. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *impressionId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *insertionId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *viewId;

@end

#pragma mark - PROClick

typedef GPB_ENUM(PROClick_FieldNumber) {
  PROClick_FieldNumber_PlatformId = 1,
  PROClick_FieldNumber_LogUserId = 3,
  PROClick_FieldNumber_ClientLogTimestamp = 4,
  PROClick_FieldNumber_EventApiTimestamp = 5,
  PROClick_FieldNumber_ClickId = 10,
  PROClick_FieldNumber_ImpressionId = 11,
  PROClick_FieldNumber_InsertionId = 12,
  PROClick_FieldNumber_RequestId = 13,
  PROClick_FieldNumber_SessionId = 14,
  PROClick_FieldNumber_ViewId = 15,
  PROClick_FieldNumber_Name = 20,
  PROClick_FieldNumber_TargetURL = 21,
  PROClick_FieldNumber_ElementId = 22,
};

/**
 * Clicks are immutable.
 * Next ID = 23.
 **/
GPB_FINAL @interface PROClick : GPBMessage

/** Optional.  Default derived from API Key or BatchLogRequest. */
@property(nonatomic, readwrite) uint64_t platformId;

/** Required.  Can be optional if set on a wrapping BatchLogRequest. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *logUserId;

/**
 * Required.  Can be optional if set on a wrapping BatchLogRequest.
 * Client timestamp when event was created.
 **/
@property(nonatomic, readwrite) uint64_t clientLogTimestamp;

/** Clients should not set this.  This gets set in the Event API. */
@property(nonatomic, readwrite) uint64_t eventApiTimestamp;

/** Required.  This is a UUID for the click. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clickId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *impressionId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *insertionId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

/** Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *viewId;

/**
 * Optional.  Name of the click.  E.g. "FILTER_UPDATED" or  "CLOSEUP".
 * Do not stick parameters in this name.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** Optional.  The next URL. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetURL;

/** Optional.  The clicked element ID. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *elementId;

@end

#pragma mark - PROLatestImpressions

typedef GPB_ENUM(PROLatestImpressions_FieldNumber) {
  PROLatestImpressions_FieldNumber_ImpressionArray = 1,
};

/**
 * Contains a list of recent impressions for a flat event.
 * The list is wrapped in this message so (1) we can differentiate between null
 * and zero and (2) we can add more fields later.
 * For Promoted-internal use only.
 * Next ID = 2.
 **/
GPB_FINAL @interface PROLatestImpressions : GPBMessage

/** Ordered with latest impressions at the end of the repeated list. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PROLatestImpression*> *impressionArray;
/** The number of items in @c impressionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger impressionArray_Count;

@end

#pragma mark - PROLatestImpression

typedef GPB_ENUM(PROLatestImpression_FieldNumber) {
  PROLatestImpression_FieldNumber_ImpressionId = 1,
  PROLatestImpression_FieldNumber_ContentId = 2,
  PROLatestImpression_FieldNumber_Timestamp = 3,
};

/**
 * A smaller Impression to be used on LatestImpressions.
 * For Promoted-internal use only.
 * Next ID = 4.
 **/
GPB_FINAL @interface PROLatestImpression : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *impressionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contentId;

/**
 * This will be client_log_timestamp if available.  If not, then it will be
 * event_api_timestamp.
 **/
@property(nonatomic, readwrite) uint64_t timestamp;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
