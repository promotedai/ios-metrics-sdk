// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/pacing/pacing.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "proto/pacing/Pacing.pbobjc.h"
#import "proto/common/Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(PROEntityPath);
GPBObjCClassDeclaration(PROPacingAccount);
GPBObjCClassDeclaration(PROPacingCampaign);

#pragma mark - PROPacingPacingRoot

@implementation PROPacingPacingRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PROPacingPacingRoot_FileDescriptor

static GPBFileDescriptor *PROPacingPacingRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"pacing"
                                                 objcPrefix:@"PROPacing"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - PROPacingAccount

@implementation PROPacingAccount

@dynamic currencyCode;

typedef struct PROPacingAccount__storage_ {
  uint32_t _has_storage_[1];
  PROCurrencyCode currencyCode;
} PROPacingAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "currencyCode",
        .dataTypeSpecific.enumDescFunc = PROCurrencyCode_EnumDescriptor,
        .number = PROPacingAccount_FieldNumber_CurrencyCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROPacingAccount__storage_, currencyCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROPacingAccount class]
                                     rootClass:[PROPacingPacingRoot class]
                                          file:PROPacingPacingRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROPacingAccount__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PROPacingAccount_CurrencyCode_RawValue(PROPacingAccount *message) {
  GPBDescriptor *descriptor = [PROPacingAccount descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROPacingAccount_FieldNumber_CurrencyCode];
  return GPBGetMessageRawEnumField(message, field);
}

void SetPROPacingAccount_CurrencyCode_RawValue(PROPacingAccount *message, int32_t value) {
  GPBDescriptor *descriptor = [PROPacingAccount descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PROPacingAccount_FieldNumber_CurrencyCode];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - PROPacingCampaign

@implementation PROPacingCampaign

@dynamic dailyBudgetAmount;

typedef struct PROPacingCampaign__storage_ {
  uint32_t _has_storage_[1];
  double dailyBudgetAmount;
} PROPacingCampaign__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "dailyBudgetAmount",
        .dataTypeSpecific.clazz = Nil,
        .number = PROPacingCampaign_FieldNumber_DailyBudgetAmount,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROPacingCampaign__storage_, dailyBudgetAmount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROPacingCampaign class]
                                     rootClass:[PROPacingPacingRoot class]
                                          file:PROPacingPacingRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROPacingCampaign__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PROPacingFlatPacingCampaign

@implementation PROPacingFlatPacingCampaign

@dynamic hasEntityPath, entityPath;
@dynamic hasAccount, account;
@dynamic hasCampaign, campaign;

typedef struct PROPacingFlatPacingCampaign__storage_ {
  uint32_t _has_storage_[1];
  PROEntityPath *entityPath;
  PROPacingAccount *account;
  PROPacingCampaign *campaign;
} PROPacingFlatPacingCampaign__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "entityPath",
        .dataTypeSpecific.clazz = GPBObjCClass(PROEntityPath),
        .number = PROPacingFlatPacingCampaign_FieldNumber_EntityPath,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PROPacingFlatPacingCampaign__storage_, entityPath),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "account",
        .dataTypeSpecific.clazz = GPBObjCClass(PROPacingAccount),
        .number = PROPacingFlatPacingCampaign_FieldNumber_Account,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PROPacingFlatPacingCampaign__storage_, account),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "campaign",
        .dataTypeSpecific.clazz = GPBObjCClass(PROPacingCampaign),
        .number = PROPacingFlatPacingCampaign_FieldNumber_Campaign,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PROPacingFlatPacingCampaign__storage_, campaign),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PROPacingFlatPacingCampaign class]
                                     rootClass:[PROPacingPacingRoot class]
                                          file:PROPacingPacingRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PROPacingFlatPacingCampaign__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
