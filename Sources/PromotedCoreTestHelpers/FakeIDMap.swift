import Foundation

@testable import PromotedCore

final class FakeIDMap: IDMap {

  var incrementCounts: Bool = false

  private(set) var logUserIDCount: Int = 0
  func logUserID() -> ID {
    if incrementCounts {
      logUserIDCount += 1
      return .autogenerated(value: "fake-log-user-id-\(logUserIDCount)")
    }
    return .autogenerated(value: "fake-log-user-id")
  }

  private(set) var sessionIDCount: Int = 0
  func sessionID() -> ID {
    if incrementCounts {
      sessionIDCount += 1
      return .autogenerated(value: "fake-session-id-\(sessionIDCount)")
    }
    return .autogenerated(value: "fake-session-id")
  }

  private(set) var impressionIDCount: Int = 0
  func impressionID() -> ID {
    if incrementCounts {
      impressionIDCount += 1
      return .autogenerated(value: "fake-impression-id-\(impressionIDCount)")
    }
    return .autogenerated(value: "fake-impression-id")
  }

  private(set) var actionIDCount: Int = 0
  func actionID() -> ID {
    if incrementCounts {
      actionIDCount += 1
      return .autogenerated(value: "fake-action-id-\(actionIDCount)")
    }
    return .autogenerated(value: "fake-action-id")
  }

  private(set) var viewIDCount: Int = 0
  func viewID() -> ID {
    if incrementCounts {
      viewIDCount += 1
      return .autogenerated(value: "fake-view-id-\(viewIDCount)")
    }
    return .autogenerated(value: "fake-view-id")
  }
}
